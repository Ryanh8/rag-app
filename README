# RAG Chatbot with FastAPI and Next.js

A Retrieval-Augmented Generation (RAG) chatbot that allows users to upload documents and chat with an AI about their contents. Built with FastAPI, Next.js, SQLAlchemy, and Pinecone.

## Features

- 📁 Document upload support (PDF, DOCX, TXT)
- 💬 Real-time chat interface
- 🔍 RAG-powered responses using Pinecone
- 📱 Responsive design
- 🗄️ Chat history persistence

## Prerequisites

### Backend Requirements
- Python 3.11
- Supabase Database
- Pinecone Account
- OpenAI API Key

### Frontend Requirements
- Node.js 18+
- npm or yarn

## Environment Setup

1. Clone the repository:

bash
git clone 
cd rag-chatbot

2. Create a `.env` file in the root directory with the following variables:

```
DATABASE_URL=your_supabase_postgres_url
OPENAI_API_KEY=your_openai_api_key
PINECONE_API_KEY=your_pinecone_api_key
PINECONE_ENVIRONMENT=your_pinecone_environment
PINECONE_INDEX_NAME=your_index_name

## Backend Setup

1. Create and activate a virtual environment:

bash
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate

2. Install backend dependencies:

bash
pip install -r requirements.txt

3. Test the database connection:

bash
python test_connection.py

4. Start the FastAPI server:

bash
uvicorn main:app --reload

The backend API will be available at `http://localhost:8000`

## Frontend Setup

1. Navigate to the frontend directory:

bash
cd frontend

2. Install frontend dependencies:

bash
npm install or yarn install

